	AREA |.text|, CODE, READONLY
        	
minus PROC
	; начало  подпрограммы minus,данная подпрограмма реализует нахождение отрицательного числа
	ldrh	R7,[R0,R3]		; Запись в R7 из регистра R4 со смещением R2 
	sxth R7, R7, ROR #24	;Расширение полуслова со знаком до 32-разрядного слова вправо на 3 байта(для распознования отрицательных и положительных чисел) 

	
	cmp  R7,R6	; сравнение числа с нулем
	blt cloop	; метка перехода(меньше), при которой осуществляется переход в cloop, если число оказалось отрицательным 
	add	R3,#2	; выбор следующего элемента массива(смещение на 2, т.к. у нас число дыухбайтное) 		;
		
	BX LR	; выход из подпрограммы
cloop 	
	PUSH {R0,R1, LR}	; команда сохранения в стеке указанных регистров

	BL write	; переход к подпрограмме write
	
	POP {R0,R1, LR} ; извлечение из стека данных регистров

	BX LR	; выход из подпрограммы
	ENDP


write PROC	;начало  подпрограммы write,данная подпрограмма реализует подсчет отрицательных чисел и помещает в R5, а также переписывает отрицательные числа в выходной массив
	uxth R7, R7, ROR #8	;без знаковое расширение  полуслова до 32-х бит на 1 байт
	strh R7, [R2, R9]
	add	R5,#1	; подсчет количества отрицательных чисел
	add R9,#2	; запись отрицательных чисел в выходной массив
	

	add	R3,#2	; переход к следующему элементу входного массива
	
	BX LR	; выход из подпрограммы
	ENDP	; конец процесса write

array_treatment_asm PROC ; Начало функции array_treatment_asm
	EXPORT array_treatment_asm
Start PROC; Начало процесса
    
	mov	R3,#0				;   (i=0)-счетчик
	mov	R5,#0				;   (a=0)- регистр,в который будет помещаться количество отрицательных чисел
	mov R6,#0				; значение, с которым сравниваются числа,указанные во входном массиве
	mov R7, #2
	mul R1, R7
	
loop	; начало цикла, в котором сравнивается номер числа с длиной массива
	cmp	R3,R1				; сравнения номера числа с длиной массива
	bge	deadloop			; если номер числа больше длины массива, то переходит в метку deadloop и заканчивается программа
	
	PUSH {R0,R1, LR} ;команда сохранения в стеке указанных регистров(загрузка в стек)
	BL minus ; переход в подпрограмму minus
		POP {R0,R1, LR}	;извлечение из стека данных регистров(выгрузить)

	b loop			; метка возврата в loop
 
deadloop
	mov	R0, R5
	BX LR
	 ENDP ; 		

	END	; конец программы